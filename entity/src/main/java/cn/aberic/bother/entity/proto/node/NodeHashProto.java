/*
 * MIT License
 *
 * Copyright (c) 2018 Aberic Yang
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: node/NodeHash.proto

package cn.aberic.bother.entity.proto.node;

public final class NodeHashProto {
  private NodeHashProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface NodeHashOrBuilder extends
      // @@protoc_insertion_point(interface_extends:NodeHash)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 智能合约hash
     * </pre>
     *
     * <code>string contractHash = 1;</code>
     */
    String getContractHash();
    /**
     * <pre>
     * 智能合约hash
     * </pre>
     *
     * <code>string contractHash = 1;</code>
     */
    com.google.protobuf.ByteString
        getContractHashBytes();

    /**
     * <pre>
     * 当前节点的基本信息
     * </pre>
     *
     * <code>.NodeBase nodeBase = 2;</code>
     */
    boolean hasNodeBase();
    /**
     * <pre>
     * 当前节点的基本信息
     * </pre>
     *
     * <code>.NodeBase nodeBase = 2;</code>
     */
    NodeBaseProto.NodeBase getNodeBase();
    /**
     * <pre>
     * 当前节点的基本信息
     * </pre>
     *
     * <code>.NodeBase nodeBase = 2;</code>
     */
    NodeBaseProto.NodeBaseOrBuilder getNodeBaseOrBuilder();
  }
  /**
   * <pre>
   * 节点基类对象
   * </pre>
   *
   * Protobuf type {@code NodeHash}
   */
  public  static final class NodeHash extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:NodeHash)
      NodeHashOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use NodeHash.newBuilder() to construct.
    private NodeHash(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private NodeHash() {
      contractHash_ = "";
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private NodeHash(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              String s = input.readStringRequireUtf8();

              contractHash_ = s;
              break;
            }
            case 18: {
              NodeBaseProto.NodeBase.Builder subBuilder = null;
              if (nodeBase_ != null) {
                subBuilder = nodeBase_.toBuilder();
              }
              nodeBase_ = input.readMessage(NodeBaseProto.NodeBase.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(nodeBase_);
                nodeBase_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return NodeHashProto.internal_static_NodeHash_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return NodeHashProto.internal_static_NodeHash_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              NodeHashProto.NodeHash.class, NodeHashProto.NodeHash.Builder.class);
    }

    public static final int CONTRACTHASH_FIELD_NUMBER = 1;
    private volatile Object contractHash_;
    /**
     * <pre>
     * 智能合约hash
     * </pre>
     *
     * <code>string contractHash = 1;</code>
     */
    public String getContractHash() {
      Object ref = contractHash_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        contractHash_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * 智能合约hash
     * </pre>
     *
     * <code>string contractHash = 1;</code>
     */
    public com.google.protobuf.ByteString
        getContractHashBytes() {
      Object ref = contractHash_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        contractHash_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NODEBASE_FIELD_NUMBER = 2;
    private NodeBaseProto.NodeBase nodeBase_;
    /**
     * <pre>
     * 当前节点的基本信息
     * </pre>
     *
     * <code>.NodeBase nodeBase = 2;</code>
     */
    public boolean hasNodeBase() {
      return nodeBase_ != null;
    }
    /**
     * <pre>
     * 当前节点的基本信息
     * </pre>
     *
     * <code>.NodeBase nodeBase = 2;</code>
     */
    public NodeBaseProto.NodeBase getNodeBase() {
      return nodeBase_ == null ? NodeBaseProto.NodeBase.getDefaultInstance() : nodeBase_;
    }
    /**
     * <pre>
     * 当前节点的基本信息
     * </pre>
     *
     * <code>.NodeBase nodeBase = 2;</code>
     */
    public NodeBaseProto.NodeBaseOrBuilder getNodeBaseOrBuilder() {
      return getNodeBase();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getContractHashBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, contractHash_);
      }
      if (nodeBase_ != null) {
        output.writeMessage(2, getNodeBase());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getContractHashBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, contractHash_);
      }
      if (nodeBase_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getNodeBase());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof NodeHashProto.NodeHash)) {
        return super.equals(obj);
      }
      NodeHashProto.NodeHash other = (NodeHashProto.NodeHash) obj;

      boolean result = true;
      result = result && getContractHash()
          .equals(other.getContractHash());
      result = result && (hasNodeBase() == other.hasNodeBase());
      if (hasNodeBase()) {
        result = result && getNodeBase()
            .equals(other.getNodeBase());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + CONTRACTHASH_FIELD_NUMBER;
      hash = (53 * hash) + getContractHash().hashCode();
      if (hasNodeBase()) {
        hash = (37 * hash) + NODEBASE_FIELD_NUMBER;
        hash = (53 * hash) + getNodeBase().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static NodeHashProto.NodeHash parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeHashProto.NodeHash parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeHashProto.NodeHash parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeHashProto.NodeHash parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeHashProto.NodeHash parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static NodeHashProto.NodeHash parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static NodeHashProto.NodeHash parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeHashProto.NodeHash parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeHashProto.NodeHash parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static NodeHashProto.NodeHash parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static NodeHashProto.NodeHash parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static NodeHashProto.NodeHash parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(NodeHashProto.NodeHash prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * 节点基类对象
     * </pre>
     *
     * Protobuf type {@code NodeHash}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:NodeHash)
        NodeHashProto.NodeHashOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return NodeHashProto.internal_static_NodeHash_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return NodeHashProto.internal_static_NodeHash_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                NodeHashProto.NodeHash.class, NodeHashProto.NodeHash.Builder.class);
      }

      // Construct using cn.aberic.bother.entity.proto.node.NodeHashProto.NodeHash.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        contractHash_ = "";

        if (nodeBaseBuilder_ == null) {
          nodeBase_ = null;
        } else {
          nodeBase_ = null;
          nodeBaseBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return NodeHashProto.internal_static_NodeHash_descriptor;
      }

      @Override
      public NodeHashProto.NodeHash getDefaultInstanceForType() {
        return NodeHashProto.NodeHash.getDefaultInstance();
      }

      @Override
      public NodeHashProto.NodeHash build() {
        NodeHashProto.NodeHash result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public NodeHashProto.NodeHash buildPartial() {
        NodeHashProto.NodeHash result = new NodeHashProto.NodeHash(this);
        result.contractHash_ = contractHash_;
        if (nodeBaseBuilder_ == null) {
          result.nodeBase_ = nodeBase_;
        } else {
          result.nodeBase_ = nodeBaseBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof NodeHashProto.NodeHash) {
          return mergeFrom((NodeHashProto.NodeHash)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(NodeHashProto.NodeHash other) {
        if (other == NodeHashProto.NodeHash.getDefaultInstance()) return this;
        if (!other.getContractHash().isEmpty()) {
          contractHash_ = other.contractHash_;
          onChanged();
        }
        if (other.hasNodeBase()) {
          mergeNodeBase(other.getNodeBase());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        NodeHashProto.NodeHash parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (NodeHashProto.NodeHash) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private Object contractHash_ = "";
      /**
       * <pre>
       * 智能合约hash
       * </pre>
       *
       * <code>string contractHash = 1;</code>
       */
      public String getContractHash() {
        Object ref = contractHash_;
        if (!(ref instanceof String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          String s = bs.toStringUtf8();
          contractHash_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      /**
       * <pre>
       * 智能合约hash
       * </pre>
       *
       * <code>string contractHash = 1;</code>
       */
      public com.google.protobuf.ByteString
          getContractHashBytes() {
        Object ref = contractHash_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b =
              com.google.protobuf.ByteString.copyFromUtf8(
                  (String) ref);
          contractHash_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * 智能合约hash
       * </pre>
       *
       * <code>string contractHash = 1;</code>
       */
      public Builder setContractHash(
          String value) {
        if (value == null) {
    throw new NullPointerException();
  }

        contractHash_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 智能合约hash
       * </pre>
       *
       * <code>string contractHash = 1;</code>
       */
      public Builder clearContractHash() {

        contractHash_ = getDefaultInstance().getContractHash();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * 智能合约hash
       * </pre>
       *
       * <code>string contractHash = 1;</code>
       */
      public Builder setContractHashBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);

        contractHash_ = value;
        onChanged();
        return this;
      }

      private NodeBaseProto.NodeBase nodeBase_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          NodeBaseProto.NodeBase, NodeBaseProto.NodeBase.Builder, NodeBaseProto.NodeBaseOrBuilder> nodeBaseBuilder_;
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      public boolean hasNodeBase() {
        return nodeBaseBuilder_ != null || nodeBase_ != null;
      }
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      public NodeBaseProto.NodeBase getNodeBase() {
        if (nodeBaseBuilder_ == null) {
          return nodeBase_ == null ? NodeBaseProto.NodeBase.getDefaultInstance() : nodeBase_;
        } else {
          return nodeBaseBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      public Builder setNodeBase(NodeBaseProto.NodeBase value) {
        if (nodeBaseBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          nodeBase_ = value;
          onChanged();
        } else {
          nodeBaseBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      public Builder setNodeBase(
          NodeBaseProto.NodeBase.Builder builderForValue) {
        if (nodeBaseBuilder_ == null) {
          nodeBase_ = builderForValue.build();
          onChanged();
        } else {
          nodeBaseBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      public Builder mergeNodeBase(NodeBaseProto.NodeBase value) {
        if (nodeBaseBuilder_ == null) {
          if (nodeBase_ != null) {
            nodeBase_ =
              NodeBaseProto.NodeBase.newBuilder(nodeBase_).mergeFrom(value).buildPartial();
          } else {
            nodeBase_ = value;
          }
          onChanged();
        } else {
          nodeBaseBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      public Builder clearNodeBase() {
        if (nodeBaseBuilder_ == null) {
          nodeBase_ = null;
          onChanged();
        } else {
          nodeBase_ = null;
          nodeBaseBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      public NodeBaseProto.NodeBase.Builder getNodeBaseBuilder() {

        onChanged();
        return getNodeBaseFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      public NodeBaseProto.NodeBaseOrBuilder getNodeBaseOrBuilder() {
        if (nodeBaseBuilder_ != null) {
          return nodeBaseBuilder_.getMessageOrBuilder();
        } else {
          return nodeBase_ == null ?
              NodeBaseProto.NodeBase.getDefaultInstance() : nodeBase_;
        }
      }
      /**
       * <pre>
       * 当前节点的基本信息
       * </pre>
       *
       * <code>.NodeBase nodeBase = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          NodeBaseProto.NodeBase, NodeBaseProto.NodeBase.Builder, NodeBaseProto.NodeBaseOrBuilder>
          getNodeBaseFieldBuilder() {
        if (nodeBaseBuilder_ == null) {
          nodeBaseBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              NodeBaseProto.NodeBase, NodeBaseProto.NodeBase.Builder, NodeBaseProto.NodeBaseOrBuilder>(
                  getNodeBase(),
                  getParentForChildren(),
                  isClean());
          nodeBase_ = null;
        }
        return nodeBaseBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:NodeHash)
    }

    // @@protoc_insertion_point(class_scope:NodeHash)
    private static final NodeHashProto.NodeHash DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new NodeHashProto.NodeHash();
    }

    public static NodeHashProto.NodeHash getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<NodeHash>
        PARSER = new com.google.protobuf.AbstractParser<NodeHash>() {
      @Override
      public NodeHash parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NodeHash(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<NodeHash> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<NodeHash> getParserForType() {
      return PARSER;
    }

    @Override
    public NodeHashProto.NodeHash getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_NodeHash_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_NodeHash_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\023node/NodeHash.proto\032\023node/NodeBase.pro" +
      "to\"=\n\010NodeHash\022\024\n\014contractHash\030\001 \001(\t\022\033\n\010" +
      "nodeBase\030\002 \001(\0132\t.NodeBaseB3\n\"cn.aberic.b" +
      "other.entity.proto.nodeB\rNodeHashProtob\006" +
      "proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          NodeBaseProto.getDescriptor(),
        }, assigner);
    internal_static_NodeHash_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_NodeHash_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_NodeHash_descriptor,
        new String[] { "ContractHash", "NodeBase", });
    NodeBaseProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
