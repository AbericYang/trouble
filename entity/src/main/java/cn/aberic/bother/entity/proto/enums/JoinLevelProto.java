/*
 * MIT License
 *
 * Copyright (c) 2018 Aberic Yang
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: enums/JoinLevel.proto

package cn.aberic.bother.entity.proto.enums;

public final class JoinLevelProto {
  private JoinLevelProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * 加入节点所在级别
   * </pre>
   *
   * Protobuf enum {@code JoinLevel}
   */
  public enum JoinLevel
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * 孤岛
     * </pre>
     *
     * <code>LONEY = 0;</code>
     */
    LONEY(0),
    /**
     * <pre>
     * 楼
     * </pre>
     *
     * <code>TOWER = 1;</code>
     */
    TOWER(1),
    /**
     * <pre>
     * 社区
     * </pre>
     *
     * <code>COMMUNITY = 2;</code>
     */
    COMMUNITY(2),
    /**
     * <pre>
     * 县城
     * </pre>
     *
     * <code>COUNTY = 3;</code>
     */
    COUNTY(3),
    /**
     * <pre>
     * 市
     * </pre>
     *
     * <code>CITY = 4;</code>
     */
    CITY(4),
    /**
     * <pre>
     * 省
     * </pre>
     *
     * <code>PROVINCE = 5;</code>
     */
    PROVINCE(5),
    /**
     * <pre>
     * 楼，无需处理
     * </pre>
     *
     * <code>TOWER_NO_EXEC = 6;</code>
     */
    TOWER_NO_EXEC(6),
    /**
     * <pre>
     * 社区，无需处理
     * </pre>
     *
     * <code>COMMUNITY_NO_EXEC = 7;</code>
     */
    COMMUNITY_NO_EXEC(7),
    /**
     * <pre>
     * 县城，无需处理
     * </pre>
     *
     * <code>COUNTY_NO_EXEC = 8;</code>
     */
    COUNTY_NO_EXEC(8),
    /**
     * <pre>
     * 市，无需处理
     * </pre>
     *
     * <code>CITY_NO_EXEC = 9;</code>
     */
    CITY_NO_EXEC(9),
    /**
     * <pre>
     * 省，无需处理
     * </pre>
     *
     * <code>PROVINCE_NO_EXEC = 10;</code>
     */
    PROVINCE_NO_EXEC(10),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * 孤岛
     * </pre>
     *
     * <code>LONEY = 0;</code>
     */
    public static final int LONEY_VALUE = 0;
    /**
     * <pre>
     * 楼
     * </pre>
     *
     * <code>TOWER = 1;</code>
     */
    public static final int TOWER_VALUE = 1;
    /**
     * <pre>
     * 社区
     * </pre>
     *
     * <code>COMMUNITY = 2;</code>
     */
    public static final int COMMUNITY_VALUE = 2;
    /**
     * <pre>
     * 县城
     * </pre>
     *
     * <code>COUNTY = 3;</code>
     */
    public static final int COUNTY_VALUE = 3;
    /**
     * <pre>
     * 市
     * </pre>
     *
     * <code>CITY = 4;</code>
     */
    public static final int CITY_VALUE = 4;
    /**
     * <pre>
     * 省
     * </pre>
     *
     * <code>PROVINCE = 5;</code>
     */
    public static final int PROVINCE_VALUE = 5;
    /**
     * <pre>
     * 楼，无需处理
     * </pre>
     *
     * <code>TOWER_NO_EXEC = 6;</code>
     */
    public static final int TOWER_NO_EXEC_VALUE = 6;
    /**
     * <pre>
     * 社区，无需处理
     * </pre>
     *
     * <code>COMMUNITY_NO_EXEC = 7;</code>
     */
    public static final int COMMUNITY_NO_EXEC_VALUE = 7;
    /**
     * <pre>
     * 县城，无需处理
     * </pre>
     *
     * <code>COUNTY_NO_EXEC = 8;</code>
     */
    public static final int COUNTY_NO_EXEC_VALUE = 8;
    /**
     * <pre>
     * 市，无需处理
     * </pre>
     *
     * <code>CITY_NO_EXEC = 9;</code>
     */
    public static final int CITY_NO_EXEC_VALUE = 9;
    /**
     * <pre>
     * 省，无需处理
     * </pre>
     *
     * <code>PROVINCE_NO_EXEC = 10;</code>
     */
    public static final int PROVINCE_NO_EXEC_VALUE = 10;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @Deprecated
    public static JoinLevel valueOf(int value) {
      return forNumber(value);
    }

    public static JoinLevel forNumber(int value) {
      switch (value) {
        case 0: return LONEY;
        case 1: return TOWER;
        case 2: return COMMUNITY;
        case 3: return COUNTY;
        case 4: return CITY;
        case 5: return PROVINCE;
        case 6: return TOWER_NO_EXEC;
        case 7: return COMMUNITY_NO_EXEC;
        case 8: return COUNTY_NO_EXEC;
        case 9: return CITY_NO_EXEC;
        case 10: return PROVINCE_NO_EXEC;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<JoinLevel>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        JoinLevel> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<JoinLevel>() {
            public JoinLevel findValueByNumber(int number) {
              return JoinLevel.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return JoinLevelProto.getDescriptor().getEnumTypes().get(0);
    }

    private static final JoinLevel[] VALUES = values();

    public static JoinLevel valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private JoinLevel(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:JoinLevel)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\025enums/JoinLevel.proto*\272\001\n\tJoinLevel\022\t\n" +
      "\005LONEY\020\000\022\t\n\005TOWER\020\001\022\r\n\tCOMMUNITY\020\002\022\n\n\006CO" +
      "UNTY\020\003\022\010\n\004CITY\020\004\022\014\n\010PROVINCE\020\005\022\021\n\rTOWER_" +
      "NO_EXEC\020\006\022\025\n\021COMMUNITY_NO_EXEC\020\007\022\022\n\016COUN" +
      "TY_NO_EXEC\020\010\022\020\n\014CITY_NO_EXEC\020\t\022\024\n\020PROVIN" +
      "CE_NO_EXEC\020\nB5\n#cn.aberic.bother.entity." +
      "proto.enumsB\016JoinLevelProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
