/*
 * MIT License
 *
 * Copyright (c) 2018 Aberic Yang
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 *
 */

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: block/BlockOut.proto

package cn.aberic.bother.entity.proto.block;

public final class BlockOutProto {
  private BlockOutProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface BlockOutOrBuilder extends
      // @@protoc_insertion_point(interface_extends:BlockOut)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * 原始区块对象
     * </pre>
     *
     * <code>.Block block = 1;</code>
     */
    boolean hasBlock();
    /**
     * <pre>
     * 原始区块对象
     * </pre>
     *
     * <code>.Block block = 1;</code>
     */
    BlockProto.Block getBlock();
    /**
     * <pre>
     * 原始区块对象
     * </pre>
     *
     * <code>.Block block = 1;</code>
     */
    BlockProto.BlockOrBuilder getBlockOrBuilder();

    /**
     * <pre>
     * 区块在区块文件中的基本信息
     * </pre>
     *
     * <code>.BlockInfo blockInfo = 2;</code>
     */
    boolean hasBlockInfo();
    /**
     * <pre>
     * 区块在区块文件中的基本信息
     * </pre>
     *
     * <code>.BlockInfo blockInfo = 2;</code>
     */
    BlockInfoProto.BlockInfo getBlockInfo();
    /**
     * <pre>
     * 区块在区块文件中的基本信息
     * </pre>
     *
     * <code>.BlockInfo blockInfo = 2;</code>
     */
    BlockInfoProto.BlockInfoOrBuilder getBlockInfoOrBuilder();
  }
  /**
   * Protobuf type {@code BlockOut}
   */
  public  static final class BlockOut extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:BlockOut)
      BlockOutOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockOut.newBuilder() to construct.
    private BlockOut(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockOut() {
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockOut(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              BlockProto.Block.Builder subBuilder = null;
              if (block_ != null) {
                subBuilder = block_.toBuilder();
              }
              block_ = input.readMessage(BlockProto.Block.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(block_);
                block_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              BlockInfoProto.BlockInfo.Builder subBuilder = null;
              if (blockInfo_ != null) {
                subBuilder = blockInfo_.toBuilder();
              }
              blockInfo_ = input.readMessage(BlockInfoProto.BlockInfo.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(blockInfo_);
                blockInfo_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return BlockOutProto.internal_static_BlockOut_descriptor;
    }

    @Override
    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return BlockOutProto.internal_static_BlockOut_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              BlockOutProto.BlockOut.class, BlockOutProto.BlockOut.Builder.class);
    }

    public static final int BLOCK_FIELD_NUMBER = 1;
    private BlockProto.Block block_;
    /**
     * <pre>
     * 原始区块对象
     * </pre>
     *
     * <code>.Block block = 1;</code>
     */
    public boolean hasBlock() {
      return block_ != null;
    }
    /**
     * <pre>
     * 原始区块对象
     * </pre>
     *
     * <code>.Block block = 1;</code>
     */
    public BlockProto.Block getBlock() {
      return block_ == null ? BlockProto.Block.getDefaultInstance() : block_;
    }
    /**
     * <pre>
     * 原始区块对象
     * </pre>
     *
     * <code>.Block block = 1;</code>
     */
    public BlockProto.BlockOrBuilder getBlockOrBuilder() {
      return getBlock();
    }

    public static final int BLOCKINFO_FIELD_NUMBER = 2;
    private BlockInfoProto.BlockInfo blockInfo_;
    /**
     * <pre>
     * 区块在区块文件中的基本信息
     * </pre>
     *
     * <code>.BlockInfo blockInfo = 2;</code>
     */
    public boolean hasBlockInfo() {
      return blockInfo_ != null;
    }
    /**
     * <pre>
     * 区块在区块文件中的基本信息
     * </pre>
     *
     * <code>.BlockInfo blockInfo = 2;</code>
     */
    public BlockInfoProto.BlockInfo getBlockInfo() {
      return blockInfo_ == null ? BlockInfoProto.BlockInfo.getDefaultInstance() : blockInfo_;
    }
    /**
     * <pre>
     * 区块在区块文件中的基本信息
     * </pre>
     *
     * <code>.BlockInfo blockInfo = 2;</code>
     */
    public BlockInfoProto.BlockInfoOrBuilder getBlockInfoOrBuilder() {
      return getBlockInfo();
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (block_ != null) {
        output.writeMessage(1, getBlock());
      }
      if (blockInfo_ != null) {
        output.writeMessage(2, getBlockInfo());
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (block_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getBlock());
      }
      if (blockInfo_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getBlockInfo());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof BlockOutProto.BlockOut)) {
        return super.equals(obj);
      }
      BlockOutProto.BlockOut other = (BlockOutProto.BlockOut) obj;

      boolean result = true;
      result = result && (hasBlock() == other.hasBlock());
      if (hasBlock()) {
        result = result && getBlock()
            .equals(other.getBlock());
      }
      result = result && (hasBlockInfo() == other.hasBlockInfo());
      if (hasBlockInfo()) {
        result = result && getBlockInfo()
            .equals(other.getBlockInfo());
      }
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasBlock()) {
        hash = (37 * hash) + BLOCK_FIELD_NUMBER;
        hash = (53 * hash) + getBlock().hashCode();
      }
      if (hasBlockInfo()) {
        hash = (37 * hash) + BLOCKINFO_FIELD_NUMBER;
        hash = (53 * hash) + getBlockInfo().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static BlockOutProto.BlockOut parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BlockOutProto.BlockOut parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BlockOutProto.BlockOut parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BlockOutProto.BlockOut parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BlockOutProto.BlockOut parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static BlockOutProto.BlockOut parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static BlockOutProto.BlockOut parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BlockOutProto.BlockOut parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static BlockOutProto.BlockOut parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static BlockOutProto.BlockOut parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static BlockOutProto.BlockOut parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static BlockOutProto.BlockOut parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(BlockOutProto.BlockOut prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code BlockOut}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:BlockOut)
        BlockOutProto.BlockOutOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return BlockOutProto.internal_static_BlockOut_descriptor;
      }

      @Override
      protected FieldAccessorTable
          internalGetFieldAccessorTable() {
        return BlockOutProto.internal_static_BlockOut_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                BlockOutProto.BlockOut.class, BlockOutProto.BlockOut.Builder.class);
      }

      // Construct using cn.aberic.bother.entity.proto.block.BlockOutProto.BlockOut.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        if (blockBuilder_ == null) {
          block_ = null;
        } else {
          block_ = null;
          blockBuilder_ = null;
        }
        if (blockInfoBuilder_ == null) {
          blockInfo_ = null;
        } else {
          blockInfo_ = null;
          blockInfoBuilder_ = null;
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return BlockOutProto.internal_static_BlockOut_descriptor;
      }

      @Override
      public BlockOutProto.BlockOut getDefaultInstanceForType() {
        return BlockOutProto.BlockOut.getDefaultInstance();
      }

      @Override
      public BlockOutProto.BlockOut build() {
        BlockOutProto.BlockOut result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public BlockOutProto.BlockOut buildPartial() {
        BlockOutProto.BlockOut result = new BlockOutProto.BlockOut(this);
        if (blockBuilder_ == null) {
          result.block_ = block_;
        } else {
          result.block_ = blockBuilder_.build();
        }
        if (blockInfoBuilder_ == null) {
          result.blockInfo_ = blockInfo_;
        } else {
          result.blockInfo_ = blockInfoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof BlockOutProto.BlockOut) {
          return mergeFrom((BlockOutProto.BlockOut)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(BlockOutProto.BlockOut other) {
        if (other == BlockOutProto.BlockOut.getDefaultInstance()) return this;
        if (other.hasBlock()) {
          mergeBlock(other.getBlock());
        }
        if (other.hasBlockInfo()) {
          mergeBlockInfo(other.getBlockInfo());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        BlockOutProto.BlockOut parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (BlockOutProto.BlockOut) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private BlockProto.Block block_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          BlockProto.Block, BlockProto.Block.Builder, BlockProto.BlockOrBuilder> blockBuilder_;
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      public boolean hasBlock() {
        return blockBuilder_ != null || block_ != null;
      }
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      public BlockProto.Block getBlock() {
        if (blockBuilder_ == null) {
          return block_ == null ? BlockProto.Block.getDefaultInstance() : block_;
        } else {
          return blockBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      public Builder setBlock(BlockProto.Block value) {
        if (blockBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          block_ = value;
          onChanged();
        } else {
          blockBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      public Builder setBlock(
          BlockProto.Block.Builder builderForValue) {
        if (blockBuilder_ == null) {
          block_ = builderForValue.build();
          onChanged();
        } else {
          blockBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      public Builder mergeBlock(BlockProto.Block value) {
        if (blockBuilder_ == null) {
          if (block_ != null) {
            block_ =
              BlockProto.Block.newBuilder(block_).mergeFrom(value).buildPartial();
          } else {
            block_ = value;
          }
          onChanged();
        } else {
          blockBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      public Builder clearBlock() {
        if (blockBuilder_ == null) {
          block_ = null;
          onChanged();
        } else {
          block_ = null;
          blockBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      public BlockProto.Block.Builder getBlockBuilder() {

        onChanged();
        return getBlockFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      public BlockProto.BlockOrBuilder getBlockOrBuilder() {
        if (blockBuilder_ != null) {
          return blockBuilder_.getMessageOrBuilder();
        } else {
          return block_ == null ?
              BlockProto.Block.getDefaultInstance() : block_;
        }
      }
      /**
       * <pre>
       * 原始区块对象
       * </pre>
       *
       * <code>.Block block = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BlockProto.Block, BlockProto.Block.Builder, BlockProto.BlockOrBuilder>
          getBlockFieldBuilder() {
        if (blockBuilder_ == null) {
          blockBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BlockProto.Block, BlockProto.Block.Builder, BlockProto.BlockOrBuilder>(
                  getBlock(),
                  getParentForChildren(),
                  isClean());
          block_ = null;
        }
        return blockBuilder_;
      }

      private BlockInfoProto.BlockInfo blockInfo_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          BlockInfoProto.BlockInfo, BlockInfoProto.BlockInfo.Builder, BlockInfoProto.BlockInfoOrBuilder> blockInfoBuilder_;
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      public boolean hasBlockInfo() {
        return blockInfoBuilder_ != null || blockInfo_ != null;
      }
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      public BlockInfoProto.BlockInfo getBlockInfo() {
        if (blockInfoBuilder_ == null) {
          return blockInfo_ == null ? BlockInfoProto.BlockInfo.getDefaultInstance() : blockInfo_;
        } else {
          return blockInfoBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      public Builder setBlockInfo(BlockInfoProto.BlockInfo value) {
        if (blockInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          blockInfo_ = value;
          onChanged();
        } else {
          blockInfoBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      public Builder setBlockInfo(
          BlockInfoProto.BlockInfo.Builder builderForValue) {
        if (blockInfoBuilder_ == null) {
          blockInfo_ = builderForValue.build();
          onChanged();
        } else {
          blockInfoBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      public Builder mergeBlockInfo(BlockInfoProto.BlockInfo value) {
        if (blockInfoBuilder_ == null) {
          if (blockInfo_ != null) {
            blockInfo_ =
              BlockInfoProto.BlockInfo.newBuilder(blockInfo_).mergeFrom(value).buildPartial();
          } else {
            blockInfo_ = value;
          }
          onChanged();
        } else {
          blockInfoBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      public Builder clearBlockInfo() {
        if (blockInfoBuilder_ == null) {
          blockInfo_ = null;
          onChanged();
        } else {
          blockInfo_ = null;
          blockInfoBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      public BlockInfoProto.BlockInfo.Builder getBlockInfoBuilder() {

        onChanged();
        return getBlockInfoFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      public BlockInfoProto.BlockInfoOrBuilder getBlockInfoOrBuilder() {
        if (blockInfoBuilder_ != null) {
          return blockInfoBuilder_.getMessageOrBuilder();
        } else {
          return blockInfo_ == null ?
              BlockInfoProto.BlockInfo.getDefaultInstance() : blockInfo_;
        }
      }
      /**
       * <pre>
       * 区块在区块文件中的基本信息
       * </pre>
       *
       * <code>.BlockInfo blockInfo = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          BlockInfoProto.BlockInfo, BlockInfoProto.BlockInfo.Builder, BlockInfoProto.BlockInfoOrBuilder>
          getBlockInfoFieldBuilder() {
        if (blockInfoBuilder_ == null) {
          blockInfoBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              BlockInfoProto.BlockInfo, BlockInfoProto.BlockInfo.Builder, BlockInfoProto.BlockInfoOrBuilder>(
                  getBlockInfo(),
                  getParentForChildren(),
                  isClean());
          blockInfo_ = null;
        }
        return blockInfoBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:BlockOut)
    }

    // @@protoc_insertion_point(class_scope:BlockOut)
    private static final BlockOutProto.BlockOut DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new BlockOutProto.BlockOut();
    }

    public static BlockOutProto.BlockOut getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockOut>
        PARSER = new com.google.protobuf.AbstractParser<BlockOut>() {
      @Override
      public BlockOut parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockOut(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockOut> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<BlockOut> getParserForType() {
      return PARSER;
    }

    @Override
    public BlockOutProto.BlockOut getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_BlockOut_descriptor;
  private static final
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_BlockOut_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\024block/BlockOut.proto\032\021block/Block.prot" +
      "o\032\025block/BlockInfo.proto\"@\n\010BlockOut\022\025\n\005" +
      "block\030\001 \001(\0132\006.Block\022\035\n\tblockInfo\030\002 \001(\0132\n" +
      ".BlockInfoB4\n#cn.aberic.bother.entity.pr" +
      "oto.blockB\rBlockOutProtob\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          BlockProto.getDescriptor(),
          BlockInfoProto.getDescriptor(),
        }, assigner);
    internal_static_BlockOut_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_BlockOut_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_BlockOut_descriptor,
        new String[] { "Block", "BlockInfo", });
    BlockProto.getDescriptor();
    BlockInfoProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
